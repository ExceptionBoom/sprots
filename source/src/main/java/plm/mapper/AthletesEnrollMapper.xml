<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="plm.mapper.AthletesEnrollMapper">
  <resultMap id="BaseResultMap" type="plm.beans.AthletesEnroll">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="participants_id" jdbcType="INTEGER" property="participantsId" />
    <result column="competition_unit_manager_id" jdbcType="INTEGER" property="competitionUnitManagerId" />
    <result column="sports_group_unit_id" jdbcType="INTEGER" property="sportsGroupUnitId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="judge_state" jdbcType="BIT" property="judgeState" />
    <result column="sports_group_item_id" jdbcType="VARCHAR" property="sportsGroupItemId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, participants_id, competition_unit_manager_id, sports_group_unit_id, name, sex, 
    judge_state, sports_group_item_id
  </sql>
  <select id="selectByExample" parameterType="plm.beans.AthletesEnrollExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from athletes_enroll
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from athletes_enroll
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from athletes_enroll
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="plm.beans.AthletesEnrollExample">
    delete from athletes_enroll
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="plm.beans.AthletesEnroll">
    insert into athletes_enroll (id, participants_id, competition_unit_manager_id, 
      sports_group_unit_id, name, sex, 
      judge_state, sports_group_item_id)
    values (#{id,jdbcType=INTEGER}, #{participantsId,jdbcType=INTEGER}, #{competitionUnitManagerId,jdbcType=INTEGER}, 
      #{sportsGroupUnitId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, 
      #{judgeState,jdbcType=BIT}, #{sportsGroupItemId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="plm.beans.AthletesEnroll">
    insert into athletes_enroll
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="participantsId != null">
        participants_id,
      </if>
      <if test="competitionUnitManagerId != null">
        competition_unit_manager_id,
      </if>
      <if test="sportsGroupUnitId != null">
        sports_group_unit_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="judgeState != null">
        judge_state,
      </if>
      <if test="sportsGroupItemId != null">
        sports_group_item_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="participantsId != null">
        #{participantsId,jdbcType=INTEGER},
      </if>
      <if test="competitionUnitManagerId != null">
        #{competitionUnitManagerId,jdbcType=INTEGER},
      </if>
      <if test="sportsGroupUnitId != null">
        #{sportsGroupUnitId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="judgeState != null">
        #{judgeState,jdbcType=BIT},
      </if>
      <if test="sportsGroupItemId != null">
        #{sportsGroupItemId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="plm.beans.AthletesEnrollExample" resultType="java.lang.Long">
    select count(*) from athletes_enroll
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update athletes_enroll
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.participantsId != null">
        participants_id = #{record.participantsId,jdbcType=INTEGER},
      </if>
      <if test="record.competitionUnitManagerId != null">
        competition_unit_manager_id = #{record.competitionUnitManagerId,jdbcType=INTEGER},
      </if>
      <if test="record.sportsGroupUnitId != null">
        sports_group_unit_id = #{record.sportsGroupUnitId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.judgeState != null">
        judge_state = #{record.judgeState,jdbcType=BIT},
      </if>
      <if test="record.sportsGroupItemId != null">
        sports_group_item_id = #{record.sportsGroupItemId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update athletes_enroll
    set id = #{record.id,jdbcType=INTEGER},
      participants_id = #{record.participantsId,jdbcType=INTEGER},
      competition_unit_manager_id = #{record.competitionUnitManagerId,jdbcType=INTEGER},
      sports_group_unit_id = #{record.sportsGroupUnitId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=CHAR},
      judge_state = #{record.judgeState,jdbcType=BIT},
      sports_group_item_id = #{record.sportsGroupItemId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="plm.beans.AthletesEnroll">
    update athletes_enroll
    <set>
      <if test="participantsId != null">
        participants_id = #{participantsId,jdbcType=INTEGER},
      </if>
      <if test="competitionUnitManagerId != null">
        competition_unit_manager_id = #{competitionUnitManagerId,jdbcType=INTEGER},
      </if>
      <if test="sportsGroupUnitId != null">
        sports_group_unit_id = #{sportsGroupUnitId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="judgeState != null">
        judge_state = #{judgeState,jdbcType=BIT},
      </if>
      <if test="sportsGroupItemId != null">
        sports_group_item_id = #{sportsGroupItemId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="plm.beans.AthletesEnroll">
    update athletes_enroll
    set participants_id = #{participantsId,jdbcType=INTEGER},
      competition_unit_manager_id = #{competitionUnitManagerId,jdbcType=INTEGER},
      sports_group_unit_id = #{sportsGroupUnitId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      judge_state = #{judgeState,jdbcType=BIT},
      sports_group_item_id = #{sportsGroupItemId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>