<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="plm.mapper.AnnouncementMapper">
  <resultMap id="BaseResultMap" type="plm.beans.Announcement">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sports_id" jdbcType="INTEGER" property="sportsId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="localed" jdbcType="VARCHAR" property="localed" />
    <result column="state" jdbcType="BIT" property="state" />
    <result column="sports_manager_id" jdbcType="INTEGER" property="sportsManagerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="plm.beans.Announcement">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sports_id, title, localed, state, sports_manager_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="plm.beans.AnnouncementExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from announcement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="plm.beans.AnnouncementExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from announcement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from announcement
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from announcement
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="plm.beans.AnnouncementExample">
    delete from announcement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="plm.beans.Announcement">
    insert into announcement (id, sports_id, title, 
      localed, state, sports_manager_id, 
      content)
    values (#{id,jdbcType=INTEGER}, #{sportsId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{localed,jdbcType=VARCHAR}, #{state,jdbcType=BIT}, #{sportsManagerId,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="plm.beans.Announcement">
    insert into announcement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sportsId != null">
        sports_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="localed != null">
        localed,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="sportsManagerId != null">
        sports_manager_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sportsId != null">
        #{sportsId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="localed != null">
        #{localed,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=BIT},
      </if>
      <if test="sportsManagerId != null">
        #{sportsManagerId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="plm.beans.AnnouncementExample" resultType="java.lang.Long">
    select count(*) from announcement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update announcement
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sportsId != null">
        sports_id = #{record.sportsId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.localed != null">
        localed = #{record.localed,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=BIT},
      </if>
      <if test="record.sportsManagerId != null">
        sports_manager_id = #{record.sportsManagerId,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update announcement
    set id = #{record.id,jdbcType=INTEGER},
      sports_id = #{record.sportsId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      localed = #{record.localed,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=BIT},
      sports_manager_id = #{record.sportsManagerId,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update announcement
    set id = #{record.id,jdbcType=INTEGER},
      sports_id = #{record.sportsId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      localed = #{record.localed,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=BIT},
      sports_manager_id = #{record.sportsManagerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="plm.beans.Announcement">
    update announcement
    <set>
      <if test="sportsId != null">
        sports_id = #{sportsId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="localed != null">
        localed = #{localed,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=BIT},
      </if>
      <if test="sportsManagerId != null">
        sports_manager_id = #{sportsManagerId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="plm.beans.Announcement">
    update announcement
    set sports_id = #{sportsId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      localed = #{localed,jdbcType=VARCHAR},
      state = #{state,jdbcType=BIT},
      sports_manager_id = #{sportsManagerId,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="plm.beans.Announcement">
    update announcement
    set sports_id = #{sportsId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      localed = #{localed,jdbcType=VARCHAR},
      state = #{state,jdbcType=BIT},
      sports_manager_id = #{sportsManagerId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>