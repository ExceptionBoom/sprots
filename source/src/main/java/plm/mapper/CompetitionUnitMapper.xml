<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="plm.mapper.CompetitionUnitMapper">
  <resultMap id="BaseResultMap" type="plm.beans.CompetitionUnit">
    <id column="id" jdbcType="INTEGER" property="id" />
    <id column="sports_has_competition_unit_sports_id" jdbcType="INTEGER" property="sportsHasCompetitionUnitSportsId" />
    <id column="sports_has_competition_unit_competition_unit_id" jdbcType="INTEGER" property="sportsHasCompetitionUnitCompetitionUnitId" />
    <result column="sports_manager_id" jdbcType="INTEGER" property="sportsManagerId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="CHAR" property="password" />
    <result column="registration_time" jdbcType="TIMESTAMP" property="registrationTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sports_has_competition_unit_sports_id, sports_has_competition_unit_competition_unit_id, 
    sports_manager_id, account, password, registration_time
  </sql>
  <select id="selectByExample" parameterType="plm.beans.CompetitionUnitExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from competition_unit_manager
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="plm.beans.CompetitionUnitKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from competition_unit_manager
    where id = #{id,jdbcType=INTEGER}
      and sports_has_competition_unit_sports_id = #{sportsHasCompetitionUnitSportsId,jdbcType=INTEGER}
      and sports_has_competition_unit_competition_unit_id = #{sportsHasCompetitionUnitCompetitionUnitId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="plm.beans.CompetitionUnitKey">
    delete from competition_unit_manager
    where id = #{id,jdbcType=INTEGER}
      and sports_has_competition_unit_sports_id = #{sportsHasCompetitionUnitSportsId,jdbcType=INTEGER}
      and sports_has_competition_unit_competition_unit_id = #{sportsHasCompetitionUnitCompetitionUnitId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="plm.beans.CompetitionUnitExample">
    delete from competition_unit_manager
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="plm.beans.CompetitionUnit">
    insert into competition_unit_manager (id, sports_has_competition_unit_sports_id, 
      sports_has_competition_unit_competition_unit_id, sports_manager_id, 
      account, password, registration_time
      )
    values (#{id,jdbcType=INTEGER}, #{sportsHasCompetitionUnitSportsId,jdbcType=INTEGER}, 
      #{sportsHasCompetitionUnitCompetitionUnitId,jdbcType=INTEGER}, #{sportsManagerId,jdbcType=INTEGER}, 
      #{account,jdbcType=VARCHAR}, #{password,jdbcType=CHAR}, #{registrationTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="plm.beans.CompetitionUnit">
    insert into competition_unit_manager
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sportsHasCompetitionUnitSportsId != null">
        sports_has_competition_unit_sports_id,
      </if>
      <if test="sportsHasCompetitionUnitCompetitionUnitId != null">
        sports_has_competition_unit_competition_unit_id,
      </if>
      <if test="sportsManagerId != null">
        sports_manager_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="registrationTime != null">
        registration_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sportsHasCompetitionUnitSportsId != null">
        #{sportsHasCompetitionUnitSportsId,jdbcType=INTEGER},
      </if>
      <if test="sportsHasCompetitionUnitCompetitionUnitId != null">
        #{sportsHasCompetitionUnitCompetitionUnitId,jdbcType=INTEGER},
      </if>
      <if test="sportsManagerId != null">
        #{sportsManagerId,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
      <if test="registrationTime != null">
        #{registrationTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="plm.beans.CompetitionUnitExample" resultType="java.lang.Long">
    select count(*) from competition_unit_manager
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update competition_unit_manager
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sportsHasCompetitionUnitSportsId != null">
        sports_has_competition_unit_sports_id = #{record.sportsHasCompetitionUnitSportsId,jdbcType=INTEGER},
      </if>
      <if test="record.sportsHasCompetitionUnitCompetitionUnitId != null">
        sports_has_competition_unit_competition_unit_id = #{record.sportsHasCompetitionUnitCompetitionUnitId,jdbcType=INTEGER},
      </if>
      <if test="record.sportsManagerId != null">
        sports_manager_id = #{record.sportsManagerId,jdbcType=INTEGER},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=CHAR},
      </if>
      <if test="record.registrationTime != null">
        registration_time = #{record.registrationTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update competition_unit_manager
    set id = #{record.id,jdbcType=INTEGER},
      sports_has_competition_unit_sports_id = #{record.sportsHasCompetitionUnitSportsId,jdbcType=INTEGER},
      sports_has_competition_unit_competition_unit_id = #{record.sportsHasCompetitionUnitCompetitionUnitId,jdbcType=INTEGER},
      sports_manager_id = #{record.sportsManagerId,jdbcType=INTEGER},
      account = #{record.account,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=CHAR},
      registration_time = #{record.registrationTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="plm.beans.CompetitionUnit">
    update competition_unit_manager
    <set>
      <if test="sportsManagerId != null">
        sports_manager_id = #{sportsManagerId,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="registrationTime != null">
        registration_time = #{registrationTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
      and sports_has_competition_unit_sports_id = #{sportsHasCompetitionUnitSportsId,jdbcType=INTEGER}
      and sports_has_competition_unit_competition_unit_id = #{sportsHasCompetitionUnitCompetitionUnitId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="plm.beans.CompetitionUnit">
    update competition_unit_manager
    set sports_manager_id = #{sportsManagerId,jdbcType=INTEGER},
      account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=CHAR},
      registration_time = #{registrationTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
      and sports_has_competition_unit_sports_id = #{sportsHasCompetitionUnitSportsId,jdbcType=INTEGER}
      and sports_has_competition_unit_competition_unit_id = #{sportsHasCompetitionUnitCompetitionUnitId,jdbcType=INTEGER}
  </update>
</mapper>