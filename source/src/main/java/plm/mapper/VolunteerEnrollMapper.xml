<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="plm.mapper.VolunteerEnrollMapper">
  <resultMap id="BaseResultMap" type="plm.beans.VolunteerEnroll">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="participants_id" jdbcType="INTEGER" property="participantsId" />
    <result column="organization_manager_id" jdbcType="INTEGER" property="organizationManagerId" />
    <result column="volunteer_position_id" jdbcType="INTEGER" property="volunteerPositionId" />
    <result column="sports_id" jdbcType="INTEGER" property="sportsId" />
    <result column="judge_state" jdbcType="BIT" property="judgeState" />
    <result column="describetion" jdbcType="VARCHAR" property="describetion" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, participants_id, organization_manager_id, volunteer_position_id, sports_id, judge_state, 
    describetion, note
  </sql>
  <select id="selectByExample" parameterType="plm.beans.VolunteerEnrollExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from volunteer_enroll
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from volunteer_enroll
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from volunteer_enroll
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="plm.beans.VolunteerEnrollExample">
    delete from volunteer_enroll
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="plm.beans.VolunteerEnroll">
    insert into volunteer_enroll (id, participants_id, organization_manager_id, 
      volunteer_position_id, sports_id, judge_state, 
      describetion, note)
    values (#{id,jdbcType=INTEGER}, #{participantsId,jdbcType=INTEGER}, #{organizationManagerId,jdbcType=INTEGER}, 
      #{volunteerPositionId,jdbcType=INTEGER}, #{sportsId,jdbcType=INTEGER}, #{judgeState,jdbcType=BIT}, 
      #{describetion,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="plm.beans.VolunteerEnroll">
    insert into volunteer_enroll
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="participantsId != null">
        participants_id,
      </if>
      <if test="organizationManagerId != null">
        organization_manager_id,
      </if>
      <if test="volunteerPositionId != null">
        volunteer_position_id,
      </if>
      <if test="sportsId != null">
        sports_id,
      </if>
      <if test="judgeState != null">
        judge_state,
      </if>
      <if test="describetion != null">
        describetion,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="participantsId != null">
        #{participantsId,jdbcType=INTEGER},
      </if>
      <if test="organizationManagerId != null">
        #{organizationManagerId,jdbcType=INTEGER},
      </if>
      <if test="volunteerPositionId != null">
        #{volunteerPositionId,jdbcType=INTEGER},
      </if>
      <if test="sportsId != null">
        #{sportsId,jdbcType=INTEGER},
      </if>
      <if test="judgeState != null">
        #{judgeState,jdbcType=BIT},
      </if>
      <if test="describetion != null">
        #{describetion,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="plm.beans.VolunteerEnrollExample" resultType="java.lang.Long">
    select count(*) from volunteer_enroll
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update volunteer_enroll
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.participantsId != null">
        participants_id = #{record.participantsId,jdbcType=INTEGER},
      </if>
      <if test="record.organizationManagerId != null">
        organization_manager_id = #{record.organizationManagerId,jdbcType=INTEGER},
      </if>
      <if test="record.volunteerPositionId != null">
        volunteer_position_id = #{record.volunteerPositionId,jdbcType=INTEGER},
      </if>
      <if test="record.sportsId != null">
        sports_id = #{record.sportsId,jdbcType=INTEGER},
      </if>
      <if test="record.judgeState != null">
        judge_state = #{record.judgeState,jdbcType=BIT},
      </if>
      <if test="record.describetion != null">
        describetion = #{record.describetion,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update volunteer_enroll
    set id = #{record.id,jdbcType=INTEGER},
      participants_id = #{record.participantsId,jdbcType=INTEGER},
      organization_manager_id = #{record.organizationManagerId,jdbcType=INTEGER},
      volunteer_position_id = #{record.volunteerPositionId,jdbcType=INTEGER},
      sports_id = #{record.sportsId,jdbcType=INTEGER},
      judge_state = #{record.judgeState,jdbcType=BIT},
      describetion = #{record.describetion,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="plm.beans.VolunteerEnroll">
    update volunteer_enroll
    <set>
      <if test="participantsId != null">
        participants_id = #{participantsId,jdbcType=INTEGER},
      </if>
      <if test="organizationManagerId != null">
        organization_manager_id = #{organizationManagerId,jdbcType=INTEGER},
      </if>
      <if test="volunteerPositionId != null">
        volunteer_position_id = #{volunteerPositionId,jdbcType=INTEGER},
      </if>
      <if test="sportsId != null">
        sports_id = #{sportsId,jdbcType=INTEGER},
      </if>
      <if test="judgeState != null">
        judge_state = #{judgeState,jdbcType=BIT},
      </if>
      <if test="describetion != null">
        describetion = #{describetion,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="plm.beans.VolunteerEnroll">
    update volunteer_enroll
    set participants_id = #{participantsId,jdbcType=INTEGER},
      organization_manager_id = #{organizationManagerId,jdbcType=INTEGER},
      volunteer_position_id = #{volunteerPositionId,jdbcType=INTEGER},
      sports_id = #{sportsId,jdbcType=INTEGER},
      judge_state = #{judgeState,jdbcType=BIT},
      describetion = #{describetion,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>